function [ R ] = RotationMatrix( angles )
%RotationMatrix makes a Yaw-Pitch-Roll rotation matrix from the angle
%vector. 
% 
% If the angles are from frame i to f, then the returned matrix is Ri_f.
% Thus, if Ri_f pre multiplies a column vector in the f frame, vf, then:
% vi = Ri_f*vf;

    c1 = cos(angles(1));
    c2 = cos(angles(2));
    c3 = cos(angles(3));
    s1 = sin(angles(1));
    s2 = sin(angles(2));
    s3 = sin(angles(3));
    
    R = [c2*c3, s1*s2*c3-c1*s3, c1*s2*c3+s1*s3; ...
        c2*s3, s1*s2*s3+c1*c3, c1*s2*s3-s1*c3; ...
        -s2, s1*c2, c1*c2];

%     R = [cos(angles(2))*cos(angles(3)), ...
%         sin(angles(1))*sin(angles(2))*cos(angles(3))-cos(angles(1))*sin(angles(3)), ...
%         cos(angles(1))*sin(angles(2))*cos(angles(3))+sin(angles(1))*sin(angles(3)); ...
%         cos(angles(2))*sin(angles(3)), ...
%         sin(angles(1))*sin(angles(2))*sin(angles(3))+cos(angles(1))*cos(angles(3)), ...
%         cos(angles(1))*sin(angles(2))*sin(angles(3))-sin(angles(1))*cos(angles(3)); ...
%         -sin(angles(2)), ...
%         sin(angles(1))*cos(angles(2)), ...
%         cos(angles(1))*cos(angles(2))];

end
